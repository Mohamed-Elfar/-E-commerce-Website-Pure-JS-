import{showToast as t,loginUser as e}from"../../assets/js/utils.js";const n=e();function a(){if(!n)return t("error","Please log in first"),[];return(JSON.parse(localStorage.getItem("allProducts"))||[]).filter((t=>Number(t.createdBy)===n.userId))}function s(){const t=document.querySelector("table tbody"),e=document.getElementById("productCards"),n=a();e.innerHTML="",t.innerHTML="",n?.map((t=>{const n=document.createElement("div");n.className="col mb-4",n.innerHTML=`\n        <div class="card h-100 border-0 shadow-sm p-3">\n          <div class="d-flex flex-sm-row flex-column position-relative">\n             <img src="${t.image}" \n                 class="p-1 w-100 w-sm-auto" \n                 style="height: 160px; max-width: 160px; object-fit: contain; background: linear-gradient(145deg, #f8f9fa, #e9ecef);" \n                 alt="${t.name}" \n                onerror="this.src='https://img.freepik.com/free-vector/illustration-gallery-icon_53876-27002.jpg'">\n            <div class="card-body p-3">\n              <div class="d-flex flex-column-reverse flex-sm-row">\n             <div class="">\n              <h5 class="card-title fs-5 fw-semibold">${t.name}</h5>\n              <p class="card-text text-muted fs-6 mb-1">${t.description}}</p>\n             </div>\n            <div class="d-flex align-items-start mb-2">\n                <button aria-label="Update Product" type="button" class="btn btn-sm btn-outline-primary mx-2 update-btn" data-id="${t.id}">\n                  <i class="fas fa-edit"></i>\n                </button>\n                <button aria-label="Delete Product" type="button" class="btn btn-sm btn-outline-danger delete-btn" data-id="${t.id}">\n                  <i class="fas fa-trash-alt"></i>\n                </button>\n                \n              </div>\n            </div>\n\n              <div class="row g-2 d-flex flex-column flex-sm-row">\n                <div class="col-6">\n                  <p class="card-text fs-6"><strong>Category:</strong> ${t?.category}</p>\n                  <p class="card-text fs-6"><strong>Price:</strong> $${parseFloat(t?.price).toFixed(2)}</p>\n                  <p class="card-text fs-6">\n                    <strong>Discount:</strong> \n                    ${t?.sale?`<span class="badge bg-danger">${t?.sale}%</span>`:"-"}\n                  </p>\n                </div>\n                <div class="col-6">\n                  <p class="card-text fs-6">\n                    <strong>Stock:</strong> \n                    <span class="badge ${Number(t.quantity)>0?"bg-success bg-opacity-10 text-success":"bg-danger bg-opacity-10 text-danger"}">\n                      ${Number(t?.quantity)>0?t?.quantity+" in Stock":"Out of Stock"}\n                    </span>\n                  </p>\n                  <p class="card-text fs-6">\n                    <strong>Rating:</strong> \n                    <span class="rating-stars">${t?.rating}\n                      <i class="fa-solid fa-star text-warning"></i>\n                      (${t?.ratingCount})\n                    </span>\n                  </p>\n                  <p class="card-text fs-6"><strong>Reviews:</strong> ${t?.reviews?.length}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      `,e.insertBefore(n,e.firstChild)})),n.map((e=>{const n=document.createElement("tr");n.innerHTML=`\n        <td>${e.id}</td>\n        <td class="d-flex align-items-center justify-content-center">\n          <div class="d-flex align-items-center text-start">\n              <img src="${e.image}" class="product-img img-fluid me-3" style="width: 70px;" alt="${e.name}" \n                 onerror="this.src='https:\n              <div>\n                 <div class="fw-medium fs-7">${e.name.substring(0,30)}${e.name.length>30?"...":""}</div>\n              <small class="text-muted">${e.description.substring(0,30)}${e.description.length>30?"...":""}</small>\n          </div>\n          </div>\n        </td>\n        <td>${e.category}</td>\n        <td>$${parseFloat(e.price).toFixed(2)}</td>\n        <td> ${e.sale?`<span class="badge bg-danger">${e.sale}%</span>`:"-"}</td>\n        <td>\n         <span class="badge ${Number(e.quantity)>0?"bg-success bg-opacity-10 text-success":"bg-danger bg-opacity-10 text-danger"}">\n          ${Number(e.quantity)>0?e.quantity+" in Stock":"Out of Stock"}\n        </span>\n        </td>\n        <td>\n          <span class="rating-stars ms-1">${e.rating}\n            <i class="product__rating-star fa-solid fa-star me-2"></i>\n            (${e.ratingCount})\n          </span>\n        </td>\n        <td>${e.reviews.length}</td>\n        <td>\n          <div class="action-btns d-flex">\n            <button aria-label="Update Product" type="button" class="btn btn-sm btn-outline-primary me-2 update-btn" data-id="${e.id}">\n              <i class="fas fa-edit"></i>\n            </button>\n            <button aria-label="Delete Product" type="button" class="btn btn-sm btn-outline-danger delete-btn" data-id="${e.id}">\n              <i class="fas fa-trash-alt"></i>\n            </button>\n          </div>\n        </td>\n      `,t.insertBefore(n,t.firstChild)}))}a(),document.getElementById("productForm").addEventListener("submit",(function(e){e.preventDefault();const a=e.target;if(!function(e){if("Choose Category"==e.category.value)return t("warning","Please choose a category"),e.category.focus(),!1;return!0}(a))return;const r=new FormData(a),o=Object.fromEntries(r.entries());let d=JSON.parse(localStorage.getItem("allProducts"))||[];const i=parseInt(o.id),c=!isNaN(i)&&i>0,l=d.find((t=>t.id===i));let u={id:c?i:Date.now(),name:o.name,description:o.description,category:o.category,image:o.image,price:parseFloat(o.price),quantity:Number(o.quantity),sale:parseFloat(o.sale)||"",createdBy:n.userId.toString(),seller:n.firstName+" "+n.lastName,rating:c?l.rating:0,ratingCount:c?l.ratingCount:0,count:c?l.count:1,reviews:c?l.reviews:[],images:[o.image2||"",o.image3||"",o.image4||"",o.image5||""]};if(c){const e=d.findIndex((t=>t.id===i));-1!==e?(d[e]=u,t("success","Product updated successfully!")):t("error","Product not found")}else d.push(u),t("success","Product added successfully!");localStorage.setItem("allProducts",JSON.stringify(d)),s(),document.getElementById("productModalLabel").textContent="Add New Product",bootstrap.Modal.getInstance(document.getElementById("productModal")).hide(),document.getElementById("submitModal").blur(),a.reset()})),document.addEventListener("click",(e=>{if(e.target.closest(".update-btn")){const n=e.target.closest(".update-btn");!function(e){const n=a().find((t=>t.id===e));if(!n)return void t("error","Product not found");const s=document.querySelector("#productForm"),r={id:e,name:n.name,description:n.description,category:n.category,image:n.image,price:n.price,quantity:n.quantity,sale:n.sale?String(n.sale):"",image2:n.images[0],image3:n.images[1],image4:n.images[2],image5:n.images[3]};for(const t of s.elements)r.hasOwnProperty(t.name)&&(t.value=r[t.name]);const o=document.getElementById("productModalLabel");o&&(o.textContent="Update Product");const d=document.getElementById("productModal");if(!d)return void t("error","Modal element not found");let i=bootstrap.Modal.getInstance(d);i||(i=new bootstrap.Modal(d)),i.show()}(parseInt(n.dataset.id))}else if(e.target.closest(".delete-btn")){const t=e.target.closest(".delete-btn"),n=parseInt(t.dataset.id);new bootstrap.Modal(document.getElementById("deleteConfirmModal")).show(),document.getElementById("confirmDeleteBtn").dataset.productId=n}})),document.getElementById("confirmDeleteBtn").addEventListener("click",(()=>{!function(e){let n=JSON.parse(localStorage.getItem("allProducts"))||[];n.find((t=>t.id===e))?(n=n.filter((t=>t.id!==e)),localStorage.setItem("allProducts",JSON.stringify(n)),t("success","Product deleted successfully!"),s()):t("error","Product not found")}(parseInt(document.getElementById("confirmDeleteBtn").dataset.productId));bootstrap.Modal.getInstance(document.getElementById("deleteConfirmModal")).hide(),document.getElementById("confirmDeleteBtn").blur()})),s(),document.querySelectorAll(".modal-close-btn").forEach((t=>{t.addEventListener("click",(()=>{const t=document.querySelector('button[data-bs-target="#productModal"]');t&&t.focus()}))}));