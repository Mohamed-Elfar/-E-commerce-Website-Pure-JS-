import{showToast,loginUser}from"../../assets/js/utils.js";const user=loginUser();function fetchSellerProducts(){if(!user)return showToast("error","Please log in first"),[];return(JSON.parse(localStorage.getItem("allProducts"))||[]).filter((t=>Number(t.createdBy)===user.userId))}function addProduct(t){t.preventDefault();const e=t.target;if(!validateCategory(e))return;const n=new FormData(e),s=Object.fromEntries(n.entries());let a=JSON.parse(localStorage.getItem("allProducts"))||[];const o=parseInt(s.id),r=!isNaN(o)&&o>0,d=a.find((t=>t.id===o));let c={id:r?o:Date.now(),name:s.name,description:s.description,category:s.category,image:s.image,price:parseFloat(s.price),quantity:Number(s.quantity),sale:parseFloat(s.sale)||"",createdBy:user.userId.toString(),seller:user.firstName+" "+user.lastName,rating:r?d.rating:0,ratingCount:r?d.ratingCount:0,count:r?d.count:1,reviews:r?d.reviews:[],images:[s.image2||"",s.image3||"",s.image4||"",s.image5||""]};if(r){const t=a.findIndex((t=>t.id===o));-1!==t?(a[t]=c,showToast("success","Product updated successfully!")):showToast("error","Product not found")}else a.push(c),showToast("success","Product added successfully!");localStorage.setItem("allProducts",JSON.stringify(a)),displayProducts();document.getElementById("productModalLabel").textContent="Add New Product";bootstrap.Modal.getInstance(document.getElementById("productModal")).hide(),document.getElementById("submitModal").blur(),e.reset()}fetchSellerProducts();let form=document.getElementById("productForm");function updateProduct(t){const e=fetchSellerProducts().find((e=>e.id===t));if(!e)return void showToast("error","Product not found");const n=document.querySelector("#productForm"),s={id:t,name:e.name,description:e.description,category:e.category,image:e.image,price:e.price,quantity:e.quantity,sale:e.sale?String(e.sale):"",image2:e.images[0],image3:e.images[1],image4:e.images[2],image5:e.images[3]};for(const t of n.elements)s.hasOwnProperty(t.name)&&(t.value=s[t.name]);const a=document.getElementById("productModalLabel");a&&(a.textContent="Update Product");const o=document.getElementById("productModal");if(!o)return void showToast("error","Modal element not found");let r=bootstrap.Modal.getInstance(o);r||(r=new bootstrap.Modal(o)),r.show()}function deleteProduct(t){let e=JSON.parse(localStorage.getItem("allProducts"))||[];e.find((e=>e.id===t))?(e=e.filter((e=>e.id!==t)),localStorage.setItem("allProducts",JSON.stringify(e)),showToast("success","Product deleted successfully!"),displayProducts()):showToast("error","Product not found")}function displayProducts(){const t=document.querySelector("table tbody"),e=document.getElementById("productCards"),n=fetchSellerProducts();e.innerHTML="",t.innerHTML="",n.map((t=>{const n=document.createElement("div");n.className="col mb-4",n.innerHTML=`\n        <div class="card h-100 border-0 shadow-sm p-3">\n          <div class="d-flex flex-sm-row flex-column position-relative">\n             <img src="${t.image}" \n                 class="p-1 w-100 w-sm-auto" \n                 style="height: 160px; max-width: 160px; object-fit: contain; background: linear-gradient(145deg, #f8f9fa, #e9ecef);" \n                 alt="${t.name}" \n                 onerror="this.src='https://img.freepik.com/free-vector/illustration-gallery-icon_53876-27002.jpg?t=st=1746629522~exp=1746633122~hmac=d7ab6887b8e97559468627d4f72ce44616d158a31eb77d05b688edf831fef7e3&w=826'">\n            <div class="card-body p-3">\n              <div class="d-flex flex-column-reverse flex-sm-row">\n             <div class="">\n              <h5 class="card-title fs-5 fw-semibold">${t.name}</h5>\n              <p class="card-text text-muted fs-6 mb-1">${t.description}}</p>\n             </div>\n            <div class="d-flex align-items-start mb-2">\n                <button aria-label="Update Product" type="button" class="btn btn-sm btn-outline-primary mx-2 update-btn" data-id="${t.id}">\n                  <i class="fas fa-edit"></i>\n                </button>\n                <button aria-label="Delete Product" type="button" class="btn btn-sm btn-outline-danger delete-btn" data-id="${t.id}">\n                  <i class="fas fa-trash-alt"></i>\n                </button>\n                \n              </div>\n            </div>\n\n              <div class="row g-2 d-flex flex-column flex-sm-row">\n                <div class="col-6">\n                  <p class="card-text fs-6"><strong>Category:</strong> ${t.category}</p>\n                  <p class="card-text fs-6"><strong>Price:</strong> $${parseFloat(t.price).toFixed(2)}</p>\n                  <p class="card-text fs-6">\n                    <strong>Discount:</strong> \n                    ${t.sale?`<span class="badge bg-danger">${t.sale}%</span>`:"-"}\n                  </p>\n                </div>\n                <div class="col-6">\n                  <p class="card-text fs-6">\n                    <strong>Stock:</strong> \n                    <span class="badge ${Number(t.quantity)>0?"bg-success bg-opacity-10 text-success":"bg-danger bg-opacity-10 text-danger"}">\n                      ${Number(t.quantity)>0?t.quantity+" in Stock":"Out of Stock"}\n                    </span>\n                  </p>\n                  <p class="card-text fs-6">\n                    <strong>Rating:</strong> \n                    <span class="rating-stars">${t.rating}\n                      <i class="fa-solid fa-star text-warning"></i>\n                      (${t.ratingCount})\n                    </span>\n                  </p>\n                  <p class="card-text fs-6"><strong>Reviews:</strong> ${t.reviews.length}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      `,e.insertBefore(n,e.firstChild)})),n.map((e=>{const n=document.createElement("tr");n.innerHTML=`\n        <td>${e.id}</td>\n        <td class="d-flex align-items-center justify-content-center">\n          <div class="d-flex align-items-center text-start">\n              <img src="${e.image}" class="product-img img-fluid me-3" style="width: 70px;" alt="${e.name}" \n                 onerror="this.src='https://img.freepik.com/free-vector/illustration-gallery-icon_53876-27002.jpg?t=st=1746629522~exp=1746633122~hmac=d7ab6887b8e97559468627d4f72ce44616d158a31eb77d05b688edf831fef7e3&w=826'">\n              <div>\n                 <div class="fw-medium fs-7">${e.name.substring(0,30)}${e.name.length>30?"...":""}</div>\n              <small class="text-muted">${e.description.substring(0,30)}${e.description.length>30?"...":""}</small>\n          </div>\n          </div>\n        </td>\n        <td>${e.category}</td>\n        <td>$${parseFloat(e.price).toFixed(2)}</td>\n        <td> ${e.sale?`<span class="badge bg-danger">${e.sale}%</span>`:"-"}</td>\n        <td>\n         <span class="badge ${Number(e.quantity)>0?"bg-success bg-opacity-10 text-success":"bg-danger bg-opacity-10 text-danger"}">\n          ${Number(e.quantity)>0?e.quantity+" in Stock":"Out of Stock"}\n        </span>\n        </td>\n        <td>\n          <span class="rating-stars ms-1">${e.rating}\n            <i class="product__rating-star fa-solid fa-star me-2"></i>\n            (${e.ratingCount})\n          </span>\n        </td>\n        <td>${e.reviews.length}</td>\n        <td>\n          <div class="action-btns d-flex">\n            <button aria-label="Update Product" type="button" class="btn btn-sm btn-outline-primary me-2 update-btn" data-id="${e.id}">\n              <i class="fas fa-edit"></i>\n            </button>\n            <button aria-label="Delete Product" type="button" class="btn btn-sm btn-outline-danger delete-btn" data-id="${e.id}">\n              <i class="fas fa-trash-alt"></i>\n            </button>\n          </div>\n        </td>\n      `,t.insertBefore(n,t.firstChild)}))}function validateCategory(t){return"Choose Category"!=t.category.value||(showToast("warning","Please choose a category"),t.category.focus(),!1)}form.addEventListener("submit",addProduct),document.addEventListener("click",(t=>{if(t.target.closest(".update-btn")){const e=t.target.closest(".update-btn");updateProduct(parseInt(e.dataset.id))}else if(t.target.closest(".delete-btn")){const e=t.target.closest(".delete-btn"),n=parseInt(e.dataset.id);new bootstrap.Modal(document.getElementById("deleteConfirmModal")).show(),document.getElementById("confirmDeleteBtn").dataset.productId=n}})),document.getElementById("confirmDeleteBtn").addEventListener("click",(()=>{deleteProduct(parseInt(document.getElementById("confirmDeleteBtn").dataset.productId));bootstrap.Modal.getInstance(document.getElementById("deleteConfirmModal")).hide(),document.getElementById("confirmDeleteBtn").blur()})),displayProducts(),document.querySelectorAll(".modal-close-btn").forEach((t=>{t.addEventListener("click",(()=>{const t=document.querySelector('button[data-bs-target="#productModal"]');t&&t.focus()}))}));